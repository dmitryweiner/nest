{"version":3,"sources":["App.js","index.js"],"names":["parseFloat","string","parsedString","replace","Number","parseString","inputFormat","parts","split","nest","id","nanoid","title","x","y","date","App","useState","nestDataText","setNestDataText","nestData","setNestData","setInputFormat","withHeader","setWithHeader","firstCount","setFirstCount","useEffect","result","strings","first","push","parseNestData","className","type","name","checked","onChange","e","target","value","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.def65fde.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst INPUT_FORMAT_COORDINATES = 1;\nconst INPUT_FORMAT_NUMBER = 2;\nconst INPUT_FORMAT_DATE = 3;\n\nfunction parseFloat(string) {\n  const parsedString = string.replace(',', '.');\n  return Number.parseFloat(parsedString);\n}\n\nfunction parseString(string, inputFormat) {\n  const parts = string.split(/\\s/);\n  const nest = {\n    id: nanoid(),\n    title: '',\n    x: 0,\n    y: 0,\n    date: null\n  };\n  switch (inputFormat) {\n    case INPUT_FORMAT_COORDINATES:\n      nest.x = parseFloat(parts[0]);\n      nest.y = parseFloat(parts[1]);\n      break;\n    case INPUT_FORMAT_NUMBER:\n      nest.title = parts[0];\n      nest.x = parseFloat(parts[1]);\n      nest.y = parseFloat(parts[2]);\n      break;\n    case INPUT_FORMAT_DATE:\n      nest.title = parts[0];\n      nest.date = parts[1];\n      nest.x = parseFloat(parts[2]);\n      nest.y = parseFloat(parts[3]);\n      break;\n    default:\n  }\n  return nest;\n}\n\nfunction parseNestData(nestDataText, inputFormat, withHeader) {\n  let result = [];\n  const strings = nestDataText.split(/[\\r\\n]+/);\n  let first = true;\n  for (const string of strings) {\n    if (withHeader && first) {\n      first = false;\n      continue;\n    }\n    if (string === '') continue;\n    result.push(parseString(string, inputFormat));\n  }\n  return result;\n}\n\nfunction App() {\n  const [nestDataText, setNestDataText] = useState('');\n  const [nestData, setNestData] = useState([]);\n  const [inputFormat, setInputFormat] = useState(INPUT_FORMAT_NUMBER);\n  const [withHeader, setWithHeader] = useState(false);\n  const [firstCount, setFirstCount] = useState(3);\n\n  useEffect(() => {\n    setNestData(parseNestData(nestDataText, inputFormat, withHeader));\n  }, [nestDataText, inputFormat, withHeader]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <h1>Nest</h1>\n        <h4>Выберите формат входных данных:</h4>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"inputFormat\"\n              checked={inputFormat === INPUT_FORMAT_COORDINATES}\n              onChange={e => e.target.checked && setInputFormat(INPUT_FORMAT_COORDINATES)}\n            />\n            X Y\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"inputFormat\"\n              checked={inputFormat === INPUT_FORMAT_NUMBER}\n              onChange={e => e.target.checked && setInputFormat(INPUT_FORMAT_NUMBER)}\n            />\n            &lt;Метка гнезда&gt; X Y\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"inputFormat\"\n              checked={inputFormat === INPUT_FORMAT_DATE}\n              onChange={e => e.target.checked && setInputFormat(INPUT_FORMAT_DATE)}\n            />\n            &lt;Метка гнезда&gt; &lt;Дата основания&gt; X Y\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={withHeader}\n              onChange={e => setWithHeader(e.target.checked)}\n            />\n            С заголовком\n          </label>\n        </div>\n        <div>\n          <h4>Скопируйте сюда координаты гнёзд:</h4>\n          <textarea\n            className=\"input-data\"\n            value={nestDataText}\n            onChange={e => setNestDataText(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Брать первых\n            <select value={firstCount} onChange={e => setFirstCount(e.target.value)}>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n              <option>6</option>\n              <option>7</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <h4>Гнёзда:</h4>\n          <ul className=\"nest-list\">\n            {nestData.map(nest => (\n              // eslint-disable-next-line react/jsx-key\n              <li>\n                <b>{nest.title ? nest.title : nest.id}</b>&nbsp;\n                {nest.date && nest.date}&nbsp;\n                {nest.x} {nest.y}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}